import numpy as np
import matplotlib.pyplot as plt
import posdef as pdf


# Data of covariance matrices
cov_21 = np.array( [[0.00366342, 0.00162317, 0.00252753],\
     [0.00162317, 0.00138304, 0.00097829],\
     [0.00252753, 0.00097829, 0.00117065]])
cov_2 = pdf.nearestPD(cov_21)

cov_3 = np.array([[0.00796234, 0.00422674, 0.00167071],\
     [0.00422674, 0.00283603, 0.00109828],\
     [0.00167071, 0.00109828, 0.00079994]])

cov_4 = np.array([[0.00468796, 0.00329079, 0.00243851],\
     [0.00329079, 0.00297998, 0.00122257],\
     [0.00243851, 0.00122257, 0.00165734]])

cov_5 = np.array([[0.01074832, 0.00780709, 0.00449567],\
     [0.00780709, 0.00640997, 0.00383279],\
     [0.00449567, 0.00383279, 0.00287709]])

cov_6 = np.array([[0.0078469, 0.00737499, 0.00544656],\
     [0.00737499, 0.00767651, 0.00608668],\
     [0.00544656, 0.00608668, 0.00539578]])

cov_7 = np.array([[0.01384952, 0.01546666, 0.01230685],\
     [0.01546666, 0.01874599, 0.01491299],\
     [0.01230685, 0.01491299, 0.01211733]])

cov_81 = np.array([[0.08437214, 0.08840825, 0.0602166 ],\
     [0.08840825, 0.09631012, 0.08780118],\
     [0.0602166, 0.08780118, 0.04688886]])
cov_8 = pdf.nearestPD(cov_81)

def covar(z):
    """
    Function to find covariance matrix
    at a given redshift
    ----------------------------------
    Parameters:
    -----------
    z : float
        redshift of the target
    -----------
    return
    -----------
    numpy.ndarray :
        covariance matrix
        parameters - M*, log phi*, alpha
    """
    zz = np.around(z)
    